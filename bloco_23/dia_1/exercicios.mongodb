// 1. Retorne o documento com o _id igual a 8.
use("dia1");
db.bios.find({ _id: 8});

// 2. Retorne o documento com o _id igual a 8, mas só exiba os atributos: _id e name .
use("dia1");
db.bios.find({ _id: 8}, { name: 1});

// 3. Retorne apenas os atributos name e birth do documento com o _id igual a 8.
use("dia1");
db.bios.find({ _id: 8}, { name: 1, birth: 1, _id: 0});

// 4. Retorne todos os documentos em que o atributo name.first seja igual a John , utilizando o método pretty() .
use("dia1");
db.bios.find({ "name.first": "John"}).pretty();

// 5. Retorne os 3 primeiros documentos da coleção bios utilizando o método pretty() .
use("dia1");
db.bios.find().limit(3);

// 6. Retorne 2 documentos da coleção bios pulando os 5 primeiros documentos.
use("dia1");
db.bios.find().limit(2).skip(5);

// 7. Retorne a quantidade de documentos da coleção books .
use("dia1");
db.books.find().count();

// 8. Conte quantos livros existem com o status = "PUBLISH" .
use("dia1");
db.books.find({ status: "PUBLISH"}).count();

// 9. Exiba os atributos title , isbn e pageCount dos 3 primeiros livros. NÃO retorne o atributo _id .
use("dia1");
db.books.find({}, { title: true, isbn: true, pageCount: true, _id: false}).limit(3);

// 10. Pule 5 documentos e exiba os atributos _id , title , authors e status dos livros com o status = "MEAP" , limitando-se a 10 documentos.
use("dia1");
db.books.find({ status: "MEAP"}, { title: true, authors: true, status: true}).limit(10).skip(5);
